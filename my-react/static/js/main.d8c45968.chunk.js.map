{"version":3,"sources":["utils/lazyload.js","scripts/reducers/data.js","scripts/reducers/user.js","scripts/reducers/index.js","scripts/store.js","scripts/views/index.js","scripts/index.js","App.js","serviceWorker.js","index.js"],"names":["loadingComponent","loader","loading","Loadable","defaultState","immutable","fromJS","count","msg","banner","middlebanner","brandbanner","smallbanner","noticebar","indexlist","detail","goodsList","goodsType","indexdetail","seracDetail","gotoshoppingcar","shoppingInfo","pic","mobile","token","sessionStorage","reducers","combineReducers","data","state","action","type","set","payload","toJS","reverse","user","obj","store","createStore","applyMiddleware","thunk","promise","MainLayout","history","this","props","location","className","path","exact","render","to","component","LazyLoad","Component","childContextTypes","PropTypes","object","MainRouter","basename","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8c45968.chunk.js","sourcesContent":["//指向路由懒加载  需要下插件\r\n\r\nimport React from \"react\";\r\nimport Loadable from \"react-loadable\";\r\n\r\n//  import {Toast} from \"antd-mobile\";\r\n//通用的懒加载\r\nconst loadingComponent = () => {\r\n    //ui库的弹框\r\n    //  Toast.loading('Loading...', 1, () => {\r\n    //     console.log('Load complete !!!');\r\n    // });\r\n    return (\r\n        <div>\r\n            loadingComponent000\r\n        </div>\r\n    )\r\n}\r\n//loading 组件通用,\r\nexport default (loader, loading = loadingComponent) => {\r\n\r\n    return Loadable({\r\n        loader,   //需要懒加载的组件\r\n        loading\r\n    })\r\n            \r\n}\r\n","import immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n  count: 1234,\r\n  msg: \"huhuuhuh\",\r\n  banner: [],\r\n  middlebanner: [],\r\n  brandbanner: [],\r\n  smallbanner: [],\r\n  noticebar:[],\r\n  indexlist:[],\r\n  detail:\"\",\r\n  goodsList:[],\r\n  goodsType:[],\r\n  indexdetail:[],\r\n  seracDetail:[],\r\n  // keyword:\"\"\r\n  gotoshoppingcar:\"\",\r\n  shoppingInfo:[]\r\n\r\n\r\n})\r\n\r\nexport const data = (state = defaultState, action) => {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case \"getBanner\":\r\n      return state.set(\"banner\", action.payload)\r\n      break;\r\n\r\n    case \"getMiddleBanner\":\r\n      return state.set(\"middlebanner\", action.payload);\r\n      break;\r\n    case \"getBrandbanner\":\r\n      return state.set(\"brandbanner\", action.payload);\r\n      break;\r\n\r\n    case \"getSmallbanner\":\r\n      return state.set(\"smallbanner\", action.payload);\r\n      break;\r\n    case \"getNoticebar\":\r\n      return state.set(\"noticebar\",action.payload);\r\n      break;\r\n      \r\n    case \"getIndexList\":\r\n      return state.set(\"indexlist\",action.payload);\r\n      break;\r\n    case \"getIndexDetail\":\r\n      return state.set(\"detail\",action.payload);\r\n      break;\r\n    case \"getGoodsType\":\r\n      return state.set(\"goodsType\",action.payload);\r\n      break;\r\n    case \"getGoodsList\":\r\n      return state.set(\"goodsList\",action.payload);\r\n      break;\r\n    case  \"getListDetail\":\r\n      return state.set(\"indexdetail\",action.payload);\r\n      break;\r\n    case \"getSearchDetail\":\r\n      return state.set(\"seracDetail\",action.payload);\r\n      break;\r\n\r\n    case  \"addShoppingCar\":\r\n      return state.set(\"gotoshoppingcar\",action.payload);\r\n      break;\r\n    case \"showShoppingCarInfo\":\r\n      return state.set(\"shoppingInfo\",action.payload);\r\n      break;\r\n    case \"ChangeGoodListReverse\":\r\n      return  state.set(\"goodsList\",state.toJS().goodsList.reverse());\r\n      break;\r\n    case \"ChangeIndexListReverse\":\r\n      return  state.set(\"indexlist\",state.toJS().indexlist.reverse());\r\n      break;\r\n    case \"ChangeSerchListReverse\":\r\n      return state.set(\"seracDetail\",state.toJS().seracDetail.reverse());\r\n    break;\r\n    default:\r\n      return state\r\n      break;\r\n  }\r\n}\r\n\r\n","import immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n  pic: null,\r\n  mobile: \"\",\r\n  token:sessionStorage.token\r\n})\r\n\r\nexport const user = (state = defaultState, action) => {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n     case \"changeUser\":\r\n       var obj ={...state.toJS(),...action.payload}   //先合并并转为js可变对象再转为不可变对象\r\n       return immutable.fromJS(obj);\r\n       break;\r\n\r\n    default:\r\n      return state\r\n      break;\r\n  }\r\n}\r\n","import {combineReducers} from \"redux-immutable\";\r\nimport { data } from \"./data\";\r\nimport { user } from \"./user\";\r\n\r\n\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    data:data,\r\n    user:user\r\n    // banner:banner\r\n})","\r\nimport {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport promise from \"redux-promise\"\r\nimport { reducers } from \"./reducers\";\r\nconst store = createStore(reducers,applyMiddleware(thunk,promise))\r\nexport default store;","// 配置所有路由\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n    HashRouter as Hash,\r\n    Redirect,\r\n    NavLink,\r\n    Link,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\n// import Guide from \"./guide\";\r\n\r\n// import Login from \"./login\"\r\n\r\nimport LazyLoad from \"&/lazyload\";\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nexport default class MainLayout extends Component {\r\n    getChildContext(){\r\n        return {\r\n            history:this.props.history,\r\n            location:this.props.location\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                {/* <h3>MainLayout组件</h3> */}\r\n                <Switch>\r\n    \r\n                    <Route path=\"/\" exact render={() => (<Redirect to=\"/guide\" />)} />\r\n                    <Route path=\"/guide\" component={LazyLoad(()=>import(\"./guide\"))}></Route>\r\n                    <Route path=\"/login\" component={LazyLoad(()=>import(\"./login\"))}></Route>\r\n                    <Route path=\"/search\" component={LazyLoad(()=>import(\"./search\"))} />\r\n                    <Route path=\"/main\" component={LazyLoad(()=>import(\"./main\"))} />\r\n                    <Route path=\"/scan\" component={LazyLoad(()=>import(\"./scan\"))} />\r\n                    {/* 详情页 */}\r\n                    {/* http://localhost:3000/#/detail/goodid=ooo */}\r\n                    <Route path=\"/detail/:goodsId\" component={LazyLoad(()=>import(\"./detail\"))} />\r\n                    {/* 购物车 */}\r\n                    {/* <Route path=\"/shopcar/:mobile\" component={LazyLoad(()=>import(\"./shopcar\"))} /> */}\r\n                    {/* 列表页经过的详情页 */}\r\n                    <Route path=\"/listdetail/:goodsid\" component={LazyLoad(()=>import(\"./listdetail\"))} />\r\n                    {/* 订单页 */}\r\n                    <Route path=\"/orderfrom\" component={LazyLoad(()=>import(\"./orderfrom\"))} />\r\n                    {/* 收藏中心 */}\r\n                    <Route path=\"/collect\" component={LazyLoad(()=>import(\"./collect\"))} />\r\n                    {/* 地址编辑页面 address */}\r\n                    <Route path=\"/address\" component={LazyLoad(()=>import(\"./address\"))} />\r\n                    {/* 地址修改 */}\r\n                    <Route path=\"/modifyaddress\"  component={LazyLoad(()=>import(\"./modifyaddress\"))}></Route>\r\n                    {/* 评论页面  comment*/}\r\n                    <Route path=\"/comment/:goodsId\"  component={LazyLoad(()=>import(\"./comment\"))}></Route>\r\n                    {/* 我的评价中心 */}\r\n                    <Route path=\"/evaluate\"  component={LazyLoad(()=>import(\"./evaluate\"))}></Route>\r\n                    {/* 填写追评  addeval*/}  \r\n                    <Route path=\"/addeval\"  component={LazyLoad(()=>import(\"./addeval\"))}></Route>\r\n                    {/* 聊天室 */}\r\n                    <Route path=\"/chat\"  component={LazyLoad(()=>import(\"./chat\"))}></Route>\r\n                    {/* 不存在 */}\r\n                    <Route render={() => (<Redirect to=\"/guide\" />)}></Route>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMainLayout.childContextTypes = {\r\n    history:PropTypes.object,\r\n    location:PropTypes.object,\r\n}\r\n","// 配置所有路由\r\nimport React, { Component } from \"react\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport {\r\n    HashRouter as Hash,\r\n    Redirect,\r\n    NavLink,\r\n    Link,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport MainLayout from \"./views\"\r\n\r\nexport class MainRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <Hash basename=\"\">\r\n                <Route component={MainLayout}></Route>\r\n            </Hash>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\nimport {MainRouter} from \"~\";   //表示引入scripts里面的index.就是\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <h3>新的项目挂载</h3> */}\n\n      {/* 挂载 MainRouter*/}\n      <MainRouter></MainRouter>\n\n      {/*       \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n     */}\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';    //原脚手架的公共样式\nimport \"@/styles/index.scss\"    //自己的公共样式   验证别名是否生效\nimport App from './App';  //次组件\nimport * as serviceWorker from './serviceWorker';     //服务配置\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
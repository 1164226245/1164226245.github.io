{"version":3,"sources":["assets/images/03.gif","scripts/components/swipe/index.js","scripts/views/guide/index.js"],"names":["module","exports","MySwipe","state","flag","this","props","id","children","options","console","log","className","length","Swiper","setState","Component","Item","timer","Guide","connect","handleGotoMain","clearInterval","history","push","count","txt","localStorage","visitCount","setInterval","src","guidePic","alt","loading","inline","style","color","onClick"],"mappings":"4JAAAA,EAAOC,QAAU,IAA0B,gC,sJCS9BC,EAAb,2MAEIC,MAAQ,CACJC,MAAK,GAHb,wEAMa,IAAD,EAKAC,KAAKC,MAHLC,EAFA,EAEAA,GAEAC,GAJA,EAGAC,QAHA,EAIAD,UAGJ,OADAE,QAAQC,IAAIH,GAER,yBAAKI,UAAU,mBAAmBL,GAAIA,GAClC,yBAAKK,UAAU,kBAEPJ,MAjBxB,0CAwBwB,IAAD,EAKXH,KAAKC,MAHLC,EAFW,EAEXA,GACAE,EAHW,EAGXA,QAGJ,GANe,EAIXD,SAEQK,OAAO,EACE,IAAIC,IAAO,IAAIP,EAAGE,KA/B/C,2CAoCyB,IAAD,EAKZJ,KAAKC,MAHLC,EAFY,EAEZA,GACAE,EAHY,EAGZA,QAGJ,GANgB,EAIZD,SAEQK,OAAO,GAAGR,KAAKF,MAAMC,KAAK,CACjB,IAAIU,IAAO,IAAIP,EAAGE,GACnCJ,KAAKU,SAAS,CAACX,MAAK,SA5ChC,GAA6BY,aAkD7Bd,EAAQe,KAAO,SAACX,GACZ,OACI,yBAAKM,UAAU,gBACVN,EAAME,W,gCCtDdU,GADahB,EAAQe,KACb,MAGPE,EAFLC,a,eAIG,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAOVe,eAAiB,WACbC,cAAcJ,GACd,EAAKZ,MAAMiB,QAAQC,KAAK,cACxBF,cAAcJ,IATd,EAAKf,MAAQ,CACTsB,MAAO,GACPC,IAAK,gBAJM,E,iFAaE,IAAD,OAEZC,aAAaC,YACbD,aAAaC,aACTD,aAAaC,WAAa,GAC1BvB,KAAKC,MAAMiB,QAAQC,KAAK,eAG5BG,aAAaC,WAAa,EAE7BV,EAAQW,aAAY,WACjB,EAAKd,UAAS,iBAAO,CACjBU,QAAS,EAAKtB,MAAMsB,UACpB,WACI,EAAKtB,MAAMsB,MAAQ,IACnBH,cAAcJ,GACd,EAAKZ,MAAMiB,QAAQC,KAAK,oBAGjC,O,6CAGHF,cAAcJ,K,+BAaR,IAAD,OAEDO,EACApB,KAAKF,MADLsB,MAGJ,OACI,yBAAKb,UAAU,SACX,yBAAKkB,IAAKC,IAAUC,IAAI,KACxB,uBAAQC,SAAO,EAACC,QAAM,EAClBtB,UAAU,cAAcuB,MAAO,CAAEC,MAAO,OACxCC,QAAS,kBAAM,EAAKhB,mBACtBI,EAAQ,U,GA7DNT,e,EAkELG","file":"static/js/30.b5cb5046.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/03.53f4cb0b.gif\";","\r\nimport \"./index.scss\"\r\nimport React , {Component} from \"react\";\r\nimport Swiper from 'swiper';\r\n// 封装 Swiper  组件  \r\n// 1. 引入\r\n// 2. html 结构\r\n// 3. 实例化   new Swiper \r\n\r\nexport class MySwipe extends Component{\r\n\r\n    state = {\r\n        flag:true\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            id,\r\n            options,\r\n            children\r\n        } = this.props;\r\n        console.log(children);\r\n        return(\r\n            <div className=\"swiper-container\" id={id} >\r\n                <div className=\"swiper-wrapper\">\r\n                    {\r\n                        children\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {\r\n            id,\r\n            options,\r\n            children\r\n        } = this.props;\r\n        if(children.length>0){\r\n            let thisSwiper = new Swiper(\"#\"+id,options);\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {\r\n            id,\r\n            options,\r\n            children\r\n        } = this.props;\r\n        if(children.length>0&&this.state.flag){\r\n            let thisSwiper = new Swiper(\"#\"+id,options);\r\n            this.setState({flag:false})  // 避免多次 实例化 \r\n        }\r\n    }\r\n}\r\n\r\n// 静态属性 \r\nMySwipe.Item = (props)=>{\r\n    return (\r\n        <div className=\"swiper-slide\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { MySwipe } from \"~/components/swipe\";\r\nimport { Button, WhiteSpace, WingBlank } from \"antd-mobile\" //ui库按钮\r\n\r\nimport guidePic from \"@/assets/images/03.gif\";  //引入引导页的图片\r\nimport { connect } from \"react-redux\"\r\nconst SwipeItem = MySwipe.Item;   //静态属性 \r\n let timer = null;  //默认定时器\r\n@connect()\r\n\r\nclass Guide extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 10,\r\n            txt: \"跳过\"\r\n        }\r\n    }\r\n    //自定义函数\r\n    handleGotoMain = () => {\r\n        clearInterval(timer);\r\n        this.props.history.push(\"/main/home\");\r\n        clearInterval(timer);\r\n    }\r\n    componentDidMount() {\r\n        //用户访问量大于3就直接进main里面的主页,不存在vistitCount就累加\r\n        if (localStorage.visitCount) {\r\n            localStorage.visitCount++;\r\n            if (localStorage.visitCount > 3) {\r\n                this.props.history.push(\"/main/home\");\r\n            }\r\n        } else {\r\n            localStorage.visitCount = 1;\r\n        }\r\n         timer = setInterval(() => {\r\n            this.setState(() => ({\r\n                count: --this.state.count,\r\n            }), () => {\r\n                if (this.state.count < 1) {\r\n                    clearInterval(timer);\r\n                    this.props.history.push(\"/main/home\");\r\n                }\r\n            });\r\n        }, 1000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(timer);\r\n        // let timer = setInterval(() => {\r\n        //     this.setState(() => ({\r\n        //         count: --this.state.count,\r\n        //     }), () => {\r\n        //         if (this.state.count < 1) {\r\n        //             clearInterval(timer);\r\n        //             this.props.history.push(\"/main/home\");\r\n        //         }\r\n        //     });\r\n        // }, 1000)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            count\r\n        } = this.state\r\n        // console.log(this.state.count)\r\n        return (\r\n            <div className=\"g-box\">\r\n                <img src={guidePic} alt=\"\" />\r\n                <Button loading inline\r\n                    className=\"guidebutton\" style={{ color: 'red' }}\r\n                    onClick={() => this.handleGotoMain()}\r\n                >{count + \"s\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Guide"],"sourceRoot":""}
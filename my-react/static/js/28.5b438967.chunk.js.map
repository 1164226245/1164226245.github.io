{"version":3,"sources":["scripts/views/scan/index.js","utils/index.js","utils/axios.js","scripts/components/head/index.js"],"names":["alert","Scan","that","alertInstance","text","onPress","props","history","go","style","success","setTimeout","console","log","close","showAlert","this","title","show","scan","Component","createHashHistory","baseURL","token","fail","msg","hide","axios","defaults","headers","common","post","interceptors","request","use","config","time","loading","sessionStorage","error","offline","Promise","reject","response","data","code","push","type","Head","goBack","serach","tokenflage","mode","className","icon","onLeftClick","handelGoBack","rightContent","onClick","handelGoSearch","bind","key","marginRight","Pop","login","Item","state","visible","selected","handleVisibleChange","setState","onSelect","opt","value","showActionSheet","BUTTONS","showActionSheetWithOptions","options","cancelButtonIndex","length","destructiveButtonIndex","message","maskClosable","wrapProps","onTouchStart","e","preventDefault","buttonIndex","src","mask","overlayClassName","overlayStyle","color","overlay","alt","align","overflow","adjustY","adjustX","offset","onVisibleChange"],"mappings":"mUAOMA,EAAQ,IAAMA,MAaCC,E,8LAZH,SAACC,GACf,IAAMC,EAAgBH,EAAM,eAAM,2EAAgB,CAE9C,CAAEI,KAAM,eAAMC,QAAS,kBAAKH,EAAKI,MAAMC,QAAQC,IAAI,IAAIC,MAAO,WAC9D,CAAEL,KAAM,eAAMC,QAAS,kBAAM,IAAMK,QAAQ,oDAAa,OAE5DC,YAAW,WAEPC,QAAQC,IAAI,cACZV,EAAcW,UACf,KAICC,CAAUC,Q,+BAIV,OACI,6BACI,kBAAC,IAAD,CAAMC,MAAM,qBAAMC,MAAM,EAAMC,MAAM,IACpC,uD,GATkBC,c,yDCpBlC,0GAyCO,IAAMb,EAAS,IAAIc,K,gMCrCpBC,EAAQ,2BAEVC,EAAM,GAiBF,SAASC,EAAKC,GAClB,IAAMC,OACN,IAAMF,KAAKC,EAAK,GAQZ,SAASf,EAAQe,GACrB,IAAMf,QAAQe,EAAK,GAzBtBE,IAAMC,SAASN,QAAQA,EACvBK,IAAMC,SAASC,QAAQC,OAAvB,MAAwCP,EACzCI,IAAMC,SAASC,QAAQE,KAAK,gBAAkB,oCA2B9CJ,IAAMK,aAAaC,QAAQC,KAAI,SAAUC,GAzBjC,IAAsBV,EAAIW,EAmC7B,OAlCDX,EAAIA,GAAK,2BACTW,EAAKA,GAAM,EACX,IAAMV,OACN,IAAMW,QAAQZ,EAAKW,GAAM,eA0BvBb,EAAMe,eAAef,MAAMe,eAAef,MAAM,GAEhDY,EAAON,QAAP,MAAwBN,EAGlBY,KACP,SAAUI,GArBN,IAAiBd,EAwBtB,OAxBsBA,EAuBd,oDAtBR,IAAMe,QAAQf,EAAK,GAuBZgB,QAAQC,OAAOH,MAIxBZ,IAAMK,aAAaW,SAAST,KAAI,SAAUS,GAsBxC,OAnBA/B,QAAQC,IAAI8B,GACW,QAApBA,EAASC,KAAKC,MAEdtC,IAAQuC,KAAK,UAMXH,EAASC,KAAKG,KACjBrC,EAAQiC,EAASC,KAAKnB,KAEC,GAApBkB,EAASC,KAAKG,KACfvB,EAAKmB,EAASC,KAAKnB,KAEnBf,EAAQiC,EAASC,KAAKnB,KAInBkB,KACN,SAAUJ,GAGX,OADAf,EAAK,qDACEiB,QAAQC,OAAOH,O,gPCvELS,E,qLAGJ9B,GACLA,GAEAX,IAAQ0C,W,uCAOZ1C,IAAQuC,KAAK,a,+BAEP,IAAD,SAKD9B,KAAKV,MAHLW,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACAgC,EAJC,EAIDA,OAIAC,EAAWb,eAAef,MAG9B,OACI,uBACI6B,KAAK,QACLC,UAAU,SACVC,KAAMpC,GAAQ,uBAAM6B,KAAK,SAEzBQ,YAAa,kBAAM,EAAKC,aAAatC,IAErCuC,aAAc,EACTP,GAAU,uBAAMQ,QAAS1C,KAAK2C,eAAeC,KAAK5C,MAAO6C,IAAI,IAAId,KAAK,SAAStC,MAAO,CAAEqD,YAAa,WACrGX,GAAY,kBAACY,EAAD,CAAK5C,KAAMH,KAAKV,MAAMa,KAAM6C,MAAOhD,KAAKV,MAAM0D,MAAQH,IAAK,MAE9E5C,O,GAtCoBG,aA2C5B6C,EAAO,IAAQA,KAGfF,E,2MACFG,MAAQ,CACJC,SAAS,EACTC,SAAU,I,EAEdC,oBAAoB,SAACF,GACjB,EAAKG,SAAS,CACVH,a,EAKRI,SAAW,SAACC,GAER,EAAKF,SAAS,CACZH,SAAS,EACTC,SAAUI,EAAIlE,MAAMmE,QAGF,SAAjBD,EAAIlE,MAAMmE,MACTlE,IAAQuC,KAAK,UACS,QAAjB0B,EAAIlE,MAAMmE,MACflE,IAAQuC,KAAK,SAEb,EAAK4B,mB,EAGbA,gBAAkB,WACd,IAAMC,EAAU,CAAC,eAAM,6CAAW,uCAAU,eAAM,gBAClD,IAAYC,2BAA2B,CACrCC,QAASF,EACTG,kBAAmBH,EAAQI,OAAS,EACpCC,uBAAwBL,EAAQI,OAAS,EAEzCE,QAAS,iCACTC,cAAc,EACd,YAAa,QACbC,UAAU,CACRC,aAAc,SAAAC,GAAC,OAAIA,EAAEC,qBAGzB,SAACC,GACC3E,QAAQC,IAAI0E,O,wEAIR,IAhDAC,EAgDD,EAIHxE,KAAKV,MADH0D,GAHC,EAED7C,KAFC,EAGD6C,OAEJ,OACI,uBAASyB,MAAI,EACTC,iBAAiB,UACjBC,aAAc,CAAEC,MAAO,gBACvBzB,QAASnD,KAAKkD,MAAMC,QACpB0B,QAAS,EAGH7B,GAAO,kBAACC,EAAD,CAAMJ,IAAI,IAAIY,MAAM,QAAQnB,MA7D3CkC,EA6DuD,uBA7DhD,yBAAKA,IAAG,qDAAgDA,EAAhD,QAA2DnC,UAAU,qBAAqByC,IAAI,OA8DnG,0BAAMrF,MAAO,CAAEqD,YAAa,IAA5B,kBAGRiC,MAAO,CACHC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCC,OAAQ,EAAE,GAAI,IAElBC,gBAAiBpF,KAAKqD,oBACtBE,SAAUvD,KAAKuD,UAGX,uBAAMxB,KAAK,kB,GAvEZ3B,c","file":"static/js/28.5b438967.chunk.js","sourcesContent":["import \"./index.scss\";\r\nimport \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\nimport Head from \"~/components/head\";\r\nimport { Modal, Button, WhiteSpace, WingBlank, Toast } from 'antd-mobile';\r\n//Modal 对话框\r\n\r\nconst alert = Modal.alert;\r\nconst showAlert = (that) => {\r\n    const alertInstance = alert('警告', '我们即将调用你的手机设备', [\r\n        //返回\r\n        { text: '取消', onPress: () =>that.props.history.go(-1), style: 'default' },     \r\n        { text: '确认', onPress: () => Toast.success('获得允许,即将调用', 1) },\r\n    ]);\r\n    setTimeout(() => {\r\n        // 可以调用close方法以在外部close\r\n        console.log('auto close');\r\n        alertInstance.close();\r\n    }, 500000);\r\n};\r\nexport default class Scan extends Component {\r\n    componentWillMount() {\r\n        showAlert(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Head title=\"扫一扫\" show={true} scan={true}></Head>\r\n                <h3>扫一扫</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","// es6  一个模块暴露多个接口\r\nimport url from \"url\";\r\n\r\nimport {createHashHistory} from \"history\";\r\n//再次暴露\r\n// export {msg} from \"./msg\";\r\n\r\nexport {config} from \"./config\";\r\n\r\n\r\n\r\nexport const commonCss={\r\n    init:{\r\n        padding:0,\r\n        margin:0\r\n    },\r\n    init1:{\r\n        color:\"red\",\r\n        boxShadow:\"1px 2px 3px 4px green\"\r\n    }\r\n}\r\n\r\nexport const commonEvent={\r\n    move(){\r\n    console.log(\"这是鼠标移动事件\")\r\n    },\r\n    touch(){\r\n        console.log(\"这是touch事件\")\r\n    }\r\n}\r\n\r\nexport {axios,baseURL} from \"./axios\";\r\n\r\n\r\n\r\nexport function getQuery(search){\r\n\r\n    return url.parse(search,true).query\r\n\r\n}\r\n//下面一句话相当于   history =this.PaymentResponse.history\r\nexport const history =new createHashHistory();\r\n\r\n","import axios from \"axios\";\r\nimport  {Toast} from 'antd-mobile';\r\nimport  {history}  from \"&\";\r\n// const baseURL=\"http://localhost:4321/\"; \r\nconst baseURL=\"http://47.105.44.9:4321/\"; \r\n\r\nlet token=\"\"\r\n// const baseURL=\"http://47.105.44.9:1234/\";   //http://localhost:1234/vue/movie\r\n// axios.defaults.baseURL = 'https://api.example.com';  //设置基路径\r\n axios.defaults.baseURL=baseURL;\r\n axios.defaults.headers.common['token'] =token;   //设置token AUTH_TOKEN  将token设置到请求头\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';//将键值对的参数用&连接起来，如果有空格，将空格转换为+加号；有特殊符号，将特殊符号转换为ASCII HEX值\r\n\r\nexport  function loadingToast(msg,time) {\r\n    msg=msg||\"正在请求\";\r\n    time=time||1;\r\n    Toast.hide();  //先清空\r\n    Toast.loading(msg, time, () => {\r\n        // console.log('加载完成 !!!');\r\n      });\r\n  }\r\n\r\n//失败\r\n export function fail(msg) {\r\n    Toast.hide();  //先清空\r\n    Toast.fail(msg, 1);\r\n  } \r\n//网络原因\r\n  export function offline(msg) {\r\n    Toast.offline(msg, 1);\r\n  }\r\n\r\n//  请求成功\r\nexport  function success(msg) {\r\n    Toast.success(msg, 1);\r\n  }\r\n  \r\n//请求之前拦截   //interceptors拦截器  \r\naxios.interceptors.request.use(function (config) {\r\n    // Do something before request is sent 在发送请求之前做些什么\r\n    // console.log(\"进入请求之前拦截\");\r\n     // 配置动画\r\n     loadingToast();\r\n      token=sessionStorage.token?sessionStorage.token:\"\";\r\n    //  //设置请求头\r\n      config.headers['token']=token;  \r\n      //前端 得到 token 会把这个 token (存储到sessionStorage ) 配置 请求头 里面 request.headers.token = token  \r\n\r\n     return config;\r\n  }, function (error) {\r\n    // Do something with request error  处理请求错误\r\n    offline(\"请求失败,网络异常\")\r\n    return Promise.reject(error);\r\n  });\r\n\r\n//请求之后响应拦截\r\n  axios.interceptors.response.use(function (response) {\r\n    // Do something with response data    对响应数据做些什么\r\n    // console.log(\"进入请求之后拦截\");\r\n    console.log(response);\r\n    if(response.data.code==\"3000\"){\r\n       //  router.push({name:'login',query:{active:'login'}})\r\n       history.push(\"/login\");\r\n  }\r\n     // type  不存在    success\r\n    // type = 0  fail\r\n    // type = 1  success \r\n    //设置不同请求type类型下的数据\r\n    if(!!response.data.type){\r\n      success(response.data.msg);\r\n    }else{\r\n      if(response.data.type==0){\r\n        fail(response.data.msg);\r\n      }else{\r\n        success(response.data.msg);\r\n      }\r\n      \r\n    }\r\n    return response;\r\n  }, function (error) {\r\n    // Do something with response error   //处理响应错误\r\n    fail(\"响应失败,服务异常\")\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  export {axios,baseURL} //模块暴露\r\n","import \"./index.scss\";\r\n//NavBar 导航栏\r\n//头部组件 Head\r\nimport React, { Component } from \"react\";\r\n//ActionSheet 动作面板\r\n//从底部弹出的模态框，提供和当前场景相关的 2 个以上的操作动作，也支持提供标题和描述。内置固定的展示样式、不支持特别灵活的修改。\r\n//Popover气泡\r\nimport { Popover, NavBar, Icon,ActionSheet } from 'antd-mobile';\r\n\r\nimport { history } from \"&\";\r\n\r\nexport default class Head extends Component {\r\n\r\n    //自定义函数\r\n    handelGoBack(show) {\r\n        if (show) {\r\n            // history.go(-1);\r\n            history.goBack();\r\n        }\r\n\r\n    }\r\n   \r\n    //跳搜索\r\n    handelGoSearch() {\r\n        history.push(\"/search\");  //去搜索\r\n    }\r\n    render() {\r\n        const {\r\n            title,\r\n            show,\r\n            serach\r\n        } = this.props\r\n        // console.log(this.props);\r\n        // console.log(sessionStorage.token);\r\n        var tokenflage=sessionStorage.token;\r\n        // console.log(tokenflage);\r\n        // console.log(this.history);\r\n        return (\r\n            <NavBar\r\n                mode=\"light\"\r\n                className=\"navbar\"\r\n                icon={show && <Icon type=\"left\" />}\r\n                // 主要是返回\r\n                onLeftClick={() => this.handelGoBack(show)}\r\n\r\n                rightContent={[\r\n                    !serach && <Icon onClick={this.handelGoSearch.bind(this)} key=\"0\" type=\"search\" style={{ marginRight: '16px' }} />,\r\n                    !tokenflage&&<Pop scan={this.props.scan} login={this.props.login } key={1} />,\r\n                ]}\r\n            >{title}</NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nconst Item = Popover.Item;\r\nconst myImg = src => <img src={`https://gw.alipayobjects.com/zos/rmsportal/${src}.svg`} className=\"am-icon am-icon-xs\" alt=\"\" />;\r\n\r\nclass Pop extends  Component {\r\n    state = {\r\n        visible: false,\r\n        selected: '',\r\n    };\r\n    handleVisibleChange=(visible)=>{\r\n        this.setState({\r\n            visible\r\n        })\r\n\r\n    }\r\n    //气泡里面选择跳转的函数\r\n    onSelect = (opt) => {\r\n        // console.log(opt.props.value);\r\n        this.setState({\r\n          visible: false,\r\n          selected: opt.props.value,\r\n        });\r\n\r\n        if(opt.props.value==\"login\"){\r\n            history.push(\"/login\");\r\n        }else if(opt.props.value==\"scan\"){\r\n            history.push(\"/scan\");\r\n        }else{\r\n            this.showActionSheet();\r\n        }\r\n    }\r\n    showActionSheet = () => {\r\n        const BUTTONS = ['拍照', '从手机相册选择', '使用相机拍照', '删除', '取消'];\r\n        ActionSheet.showActionSheetWithOptions({\r\n          options: BUTTONS,\r\n          cancelButtonIndex: BUTTONS.length - 1,\r\n          destructiveButtonIndex: BUTTONS.length - 2,\r\n          // title: 'title',\r\n          message: '请注意查看',\r\n          maskClosable: true,\r\n          'data-seed': 'logId',\r\n          wrapProps:{\r\n            onTouchStart: e => e.preventDefault(),\r\n          }\r\n        },\r\n        (buttonIndex) => {\r\n          console.log(buttonIndex)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            scan,\r\n            login\r\n        }=this.props\r\n        return (\r\n            <Popover mask\r\n                overlayClassName=\"fortest\"\r\n                overlayStyle={{ color: 'currentColor' }}\r\n                visible={this.state.visible}\r\n                overlay={[\r\n                    // (!scan&&<Item key=\"4\" value=\"scan\" icon={myImg('tOtXhkIWzwotgGSeptou')} data-seed=\"logId\">扫一扫</Item>),\r\n                    // (<Item key=\"5\" value=\"photo\" icon={myImg('PKAgAqZWJVNwKsAJSmXd')} style={{ whiteSpace: 'nowrap' }}>拍照</Item>),\r\n                    (!login&&<Item key=\"6\" value=\"login\" icon={myImg('uQIYTFeRrjPELImDRrPt')}>\r\n                        <span style={{ marginRight: 5 }}>登录</span>\r\n                    </Item>),\r\n                ]}\r\n                align={{\r\n                    overflow: { adjustY: 0, adjustX: 0 },\r\n                    offset: [-10, 0],\r\n                }}\r\n                onVisibleChange={this.handleVisibleChange}\r\n                onSelect={this.onSelect}\r\n            >\r\n                \r\n                    <Icon type=\"ellipsis\" />\r\n               \r\n            </Popover>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}